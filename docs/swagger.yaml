definitions:
  models.AuthResponse:
    description: Authentication response
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.FundWalletRequest:
    description: Wallet funding request
    properties:
      amount:
        example: 100.5
        type: number
    required:
    - amount
    type: object
  models.LoginRequest:
    description: User login request
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  models.RefreshTokenRequest:
    description: Token refresh request
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
    required:
    - refresh_token
    type: object
  models.RegisterRequest:
    description: User registration request
    properties:
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: password123
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Transaction:
    description: Transaction model for wallet operations
    properties:
      amount:
        example: 100.5
        type: number
      balance_after:
        example: 100.5
        type: number
      balance_before:
        example: 0
        type: number
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      deleted_at:
        type: string
      description:
        example: Wallet funding
        type: string
      id:
        example: 1
        type: integer
      reference:
        example: REF123456
        type: string
      status:
        description: '"pending", "completed", "failed"'
        example: completed
        type: string
      type:
        description: '"deposit", "withdrawal", "transfer"'
        example: deposit
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      wallet_id:
        example: 1
        type: integer
    type: object
  models.UpdateUserRoleRequest:
    description: Update user role request
    properties:
      role:
        enum:
        - user
        - admin
        example: admin
        type: string
    required:
    - role
    type: object
  models.User:
    description: User model
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      deleted_at:
        type: string
      email:
        example: john@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
      role:
        example: user
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  models.Wallet:
    description: Wallet model
    properties:
      balance:
        example: 100.5
        type: number
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      currency:
        example: USD
        type: string
      deleted_at:
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      name:
        example: My Wallet
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/admin/users:
    delete:
      description: Delete all users in the system (Admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete all users (Admin)
      tags:
      - Admin
    get:
      description: Retrieve all users in the system (Admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all users (Admin)
      tags:
      - Admin
  /api/admin/users/{id}:
    delete:
      description: Delete a specific user by their ID (Admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete user by ID (Admin)
      tags:
      - Admin
  /api/admin/users/{id}/role:
    put:
      consumes:
      - application/json
      description: Update a user's role (Admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user role (Admin)
      tags:
      - Admin
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh JWT access token using refresh token
      parameters:
      - description: Token refresh request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - Authentication
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with email and password
      parameters:
      - description: Registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /api/users:
    get:
      description: Retrieve a list of all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - Users
  /api/users/{id}:
    get:
      description: Retrieve a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - Users
  /api/users/email/{email}:
    get:
      description: Retrieve a specific user by their email address
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user by email
      tags:
      - Users
  /api/wallet:
    get:
      description: Retrieve the current user's wallet information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Wallet'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user wallet
      tags:
      - Wallets
  /api/wallet/fund:
    post:
      consumes:
      - application/json
      description: Add funds to the user's wallet
      parameters:
      - description: Funding request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.FundWalletRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Wallet'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Fund wallet
      tags:
      - Wallets
  /api/wallets/{walletID}/transactions:
    get:
      description: Retrieve all transactions for a specific wallet
      parameters:
      - description: Wallet ID
        in: path
        name: walletID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get wallet transactions
      tags:
      - Transactions
swagger: "2.0"
